---
layout: post
title: "The Audible"
subtitle: "changing the gameplan is risky, but sometimes necessary"
author: "Royce Branning"
date: 2015-02-03 
categories: rbfasho
---

As you saw this past Sunday, Pete Carrol, head coach of the seattle seahawks, called a passing play on the 1-yard line with time winding down and the superbowl on the line. The pass was intercepted, and what one moment looked like near certain victory turned to defeat for his team. 

Systems are really nice. They provide a road map for a certain input to become a desired output. You want some C's? Well just plug some B's into the system and we can churn out some C's for you. Systems are great. As long as you have B's. Human systems are tough when you aren't quite a B and your don't particularly want to be a C, but at the same time you like a lot of the characteristics the C's have and would like to use the tools that the system uses to get from B's to C's. The other name that I was thinking of giving this article was "Learning how to hack: Disrupting Human Systems" because the way I like to think of hacking is tinkering with the assets of a system in order to create something uniquely personal. Building on the shoulder of the systems that already exist, except sort of shifting around all of the pieces that make it up. I think that every person learns how to hack sooner or later. But learning how to hack is a skill, and I think the first key is mastery of the pre-existing system. 

I'll talk about basektball to try and illustrate how mastery allows one the ability to hack. When a child is learning the fundamentals of how to dribble and shoot, they clearly won't have the ability to maximize their physical capabilites or read a defenders feet in order to apply an offensive move. All the child learning how to dribble is worried about is keeping the ball inbetween his hand and the ground. But once he masters this skill, once the ball is a part of his hand, he can start hacking. He can work within the system (the rules of the game) in a unique way that is advantageous to his personal athelticism or skills. Basically, you need to master the tools in order to tinker with the system. And this is the way hacking is supposed to be done. An awareness of the system, accompanied by a mastery of the tools used in the system, with an additional self-awareness that allows one to know that their are unique ways in which they differ as an individual from the archetype the system is built for. 

I like to think that good professors have a system in mind for the classes they are teaching. A pathway that they envision a good student will follow which leads them to success in the class. Take my physics class for instance. Monday morning at 8am an online reading quiz is due, in which students are supposed to read the textbook sections that will be discussed in lecture for the coming week. With this rough understanding of the concepts lectures are able to dive more deeply into the topics as they should be the second time that similiar information is being presented. A problem set covering the topics for the week is due on wednesday morning so that students are pushed to apply content. Finally, the online homework system generates a review of the topics due on friday along with the class lecture that reviews the content and bridges it forward to the next week. 

If we zoom out a little more, the system of this physics class is operating on the premise that the pace of content and repitition is sufficient given that most kids in the class should be operating at around the same level. This assumption operating under the premise that admission standards uphold a consistent level of academic preparadness and or capabilites. This is all to say that systems are well thought out and theoretically should work to the advantage of, in this case, students. But what about when you start behind or just fall behind? Or what if the system faults in one way or another? 

If you are hacking, you can accomodate for a missed step or a system fault, because you employ mastery of skills in order to rearrange the tools available to you so that you can get back on track or accomodate for a uniqueness in your learning style. But we all find ourselves in situations that we are falling short, often times as a result of a lack of mastery. We find ourselves in a mode of failure. In order to bounce out of failure, there isn't really much of a choice other than to audible. And audibling is a smart move, but its risky. Its not ideal, but then again neither is the situation you find yourself in. Audibling is responsive. And not to be faulted.

So whats the relationship between hacking and audibling? I don't think they are as polar as I have made them seem, but they are similiar problem solving techniques warranted by two different scenarios. Audibling can be thought of as almost a little brother of hacking, a less ideal approach to the same type of problem solving. Iterating over the audibling process can close the margin between the two. The more you employ this type of problem solving the better you get at it, even in the less than ideal scenarios that require more of an audible approach than a hacking approach. The more you do it the better you know the process, the quicker you can find ways to fix the problem. 

So there was a minute left, clock winding down, ball on the 1 yard line. As you know, the seahawks have the best running back in the league. 3 downs for the best running back in the league to get 1 yard. The patriots had 3 timeouts. With time winding down there would be two good reasons for them to take one of these timeouts. 1) to conserve time for a responsive last seconds drive and 2) to prepare their defense for the huge plays that lie ahead. But the patriots didn't call a timeout, and whether this was intentional or not the decision to not call a timeout did something interesting. It forced head coach of the seahawks Pete Carrol to audible instead of hack. I'll explain why when I come back to this tomorrow.

extra discussion: mind blowing system management of God 